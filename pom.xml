<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ikanow.aleph2</groupId>
    <artifactId>aleph2_analytic_services_R</artifactId>
    <version>${aleph2.version}</version>
    <properties>
        <aleph2.version>0.0.1-SNAPSHOT</aleph2.version>
        <aleph2.scope>compile</aleph2.scope>
        <aleph2.hadoop>2.6.0</aleph2.hadoop>
    </properties>

    <repositories>
        <repository>
            <id>bedatadriven</id>
            <name>bedatadriven public repo</name>
            <url>https://nexus.bedatadriven.com/content/groups/public/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <sourceEncoding>UTF-8</sourceEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.2.201409121644</version>
                <configuration>
                    <excludes>
                        <!-- This actually removes code from coveralls.io -->
                        <exclude>**/hadoop/assets/UpdatedFileInputFormat*</exclude>
                        <exclude>**/hadoop/assets/UpdatedCombineFileInputFormat*</exclude>
                        <!-- Example: <exclude>**/path/to/package/*</exclude> -->
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--  execute using: mvn -e clean package shade:shade -Dmaven.test.skip=true -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7.2.201409121644,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <dependencies>
        <dependency>
            <groupId>jdk.tools</groupId>
            <artifactId>jdk.tools</artifactId>
            <version>${java.version}</version>
            <scope>system</scope>
            <systemPath>/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/lib/tools.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.10</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.10</artifactId>
            <version>1.5.2</version>
        </dependency>

        <!-- Example of internal dependency (always need data model anyway) -->
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_data_model</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.nuiton.thirdparty</groupId>
            <artifactId>JRI</artifactId>
            <version>0.9-6</version>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_core_distributed_services_library</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_core_shared_library</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_hadoop_dependencies</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_analytics_context_library</artifactId>
            <version>${aleph2.version}</version>
            <scope>${aleph2.scope}</scope>
        </dependency>
        <!-- Other external dependencies here -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-minicluster</artifactId>
            <version>${aleph2.hadoop}</version>
            <scope>test</scope>
        </dependency>
        <!-- Test deps -->
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_storage_service_hdfs</artifactId>
            <version>${aleph2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_management_db_service_mongodb</artifactId>
            <version>${aleph2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ikanow.aleph2</groupId>
            <artifactId>aleph2_search_index_service_elasticsearch</artifactId>
            <version>${aleph2.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>